package com.lowagie.text.rtf.direct;

/**
 * The RtfFontTableParser handles the events generated by the
 * RtfTokeniser while the RTF font table is parsed.
 * 
 * @version $Revision$
 * @author Mark Hall (mhall@edu.uni-klu.ac.at)
 */
public class RtfFontTableParser {
	/**
	 * The RtfImportHeader to add font mappings to.
	 */
	private RtfImportHeader importHeader = null;
	/**
	 * The number of the font being parsed.
	 */
	private String fontNr = "";
	/**
	 * The name of the font being parsed.
	 */
	private String fontName = "";
	
	/**
	 * Constructs a new RtfFontTableParser.
	 * 
	 * @param importHeader The RtfImportHeader to add font mappings to.
	 */
	public RtfFontTableParser(RtfImportHeader importHeader) {
		this.importHeader = importHeader;
		this.fontNr = "";
		this.fontName = "";
	}

	/**
	 * Handles closing of a group during parsing. If the group nesting level
	 * is 3 then an individual font definition was closed and thus if the
	 * font number and font name are set, they can be added to the mappings.
	 * 
	 * @param groupLevel The current group nesting level.
	 */
	public void handleCloseGroup(int groupLevel) {
		if(groupLevel == 3 && !this.fontNr.equals("") && !this.fontName.equals("")) {
			this.importHeader.importFont(this.fontNr, this.fontName);
			this.fontNr = "";
			this.fontName = "";
		}
	}

	/**
	 * Handles the font number control word. Only relevant if the
	 * group nesting level is 3.
	 * 
	 * @param ctrlWord The control word to handle.
	 * @param groupLevel The current group nesting level.
	 */
	public void handleCtrlWord(String ctrlWord, int groupLevel) {
		if(ctrlWord.matches("^\\\\f[0-9]+$") && groupLevel == 3) {
			this.fontNr = ctrlWord.substring(2);
		}
	}
	
	/**
	 * Handles the font name. The font name must be ended by a
	 * semicolon and must be at group nesting level 3.
	 * 
	 * @param text The font name to handle.
	 * @param groupLevel The current group nesting level.
	 */
	public void handleText(String text, int groupLevel) {
		if(text.indexOf(";") >= 0 && groupLevel == 3) {
			this.fontName = text.substring(0, text.indexOf(";"));
		}
	}
}
