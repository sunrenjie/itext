<?xml version="1.0"?>

<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- iText, a JAVA - PDF library                                      -->
<!-- $Id$         -->
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

<project name="iText.compile" default="help">
	
	<property file=".ant.properties" />
	
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Help                                                             -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

    <target name="help" description="--> shows the help screen">
        <echo>COMPILING AND JARRING THE CODE (compile.xml)</echo>
        <echo>ant compile: compiles iText</echo>
        <echo>ant compile.debug: compiles iText and allows you to debug the code</echo>
        <echo>ant jar: compiles and jars iText</echo>
        <echo>ant jar.debug: compiles for debugging and jars iText</echo>
        <echo />
	</target>

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Compiling the code                                               -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

    <target name="compile" description="--> compiles the iText code">
        <mkdir dir="${itext.classes}" />
        <javac source="1.4" target="1.4" srcdir="${itext.src}" destdir="${itext.classes}" />
    </target>

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Compiling the code for debugging                                 -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

    <target name="compile.debug" description="--> compiles the iText code for debugging">
        <mkdir dir="${itext.classes}" />
        <javac source="1.4" target="1.4" srcdir="${itext.src}" destdir="${itext.classes}" listfiles="yes" debug="true" debuglevel="lines,vars,source" />
    </target>

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Jarring the code                                                 -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

    <target name="make.jar" description="--> makes a jarfile from the iText code">
        <mkdir dir="${itext.bin}" />
        <mkdir dir="${itext.classes}/com/lowagie/text/pdf/fonts" />
        <copy todir="${itext.classes}/com/lowagie/text/pdf/fonts" overwrite="yes">
            <fileset dir="${itext.src}/com/lowagie/text/pdf/fonts">
                <include name="**/*.afm"/>
                <include name="**/*.html"/>
            </fileset>
        </copy>
        <copy todir="${itext.classes}/com/lowagie/text/" overwrite="yes">
            <fileset dir="${itext.src}/com/lowagie/text/">
                <include name="**/*.txt"/>
            </fileset>
        </copy>
        <copy todir="${itext.classes}/com/lowagie/tools/plugins" overwrite="yes">
            <fileset dir="${itext.src}/com/lowagie/tools/plugins/">
                <include name="**/*.txt"/>
            </fileset>
        </copy>
        <copy todir="${itext.classes}/com/lowagie/tools/plugins/treeview" overwrite="yes">
            <fileset dir="${itext.src}/com/lowagie/tools/plugins/treeview/">
                <include name="**/*.gif"/>
            </fileset>
        </copy>
        <copy todir="${itext.classes}/com/lowagie/text/pdf/codec/postscript" overwrite="yes">
            <fileset dir="${itext.src}/com/lowagie/text/pdf/codec/postscript/">
                <include name="**/*.ps"/>
            </fileset>
        </copy>
        <jar jarfile="${itext.bin}/iText.jar" basedir="${itext.classes}" manifest="../META-INF/MANIFEST.MF" excludes="com/lowagie/examples/**,**/*.cmap,**/*.properties,com/lowagie/text/pdf/fonts/cmaps/**" />
    </target>

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Compiling and Jarring the code                                   -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	
    <target name="jar"  depends="compile, make.jar" description="--> makes a jarfile from the iText code" />

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Jarring the code (debug)                                         -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	
    <target name="jar.debug"  depends="compile.debug, make.jar" description="--> makes a jarfile from the iText code" />

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!-- Updating the JavaCC generated files for the postscript grammar   -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <target name="update-parser" description="updates the JavaCC generated files for the postscript grammar" >
        <fail message="JavaCC location is not defined properly">
            <condition>
                <not>
                    <available file="${javacc.home}" type="dir" />
                </not>
            </condition>
        </fail>

        <property name="parser_input.dir" value="${itext.src}/com/lowagie/text/pdf/codec/postscript" />
        <property name="parser_output.dir" value="${itext.build}/parser" />

        <mkdir dir="${parser_output.dir}" />
        <javacc
            target="${parser_input.dir}/paparser.jj"
            outputdirectory="${parser_output.dir}"
            javacchome="${javacc.home}"
            static="false" />

        <macrodef name="insertlicense">
            <attribute name="name"/>
            <sequential>
                <concat destfile="${parser_input.dir}/@{name}">
                    <filelist dir="${parser_input.dir}" files="license.txt"/>
                    <filelist dir="${parser_output.dir}" files="@{name}"/>
                </concat>
            </sequential>
        </macrodef>

        <insertlicense name="JavaCharStream.java" />
        <insertlicense name="PAParser.java" />
        <insertlicense name="PAParserConstants.java" />
        <insertlicense name="PAParserTokenManager.java" />
        <insertlicense name="ParseException.java" />
        <insertlicense name="Token.java" />
        <insertlicense name="TokenMgrError.java" />

        <delete dir="${parser_output.dir}" />
    </target>

</project>
