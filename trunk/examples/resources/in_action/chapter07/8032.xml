<course>
<title>AOP with AspectJ</title>
<specs>
	<coursenumber>8032</coursenumber>
	<programs><program>Graduate in Complementary Studies in Applied Informatics: Java Development for the Enterprise</program></programs>
	<a>37.5</a>
	<b>22.5</b>
	<c />
	<d>120</d>
	<e>4</e>
	<department>CSE02</department>
	<language>English</language>
	<lecturers>
		<lecturer inCharge="true">Ramnivas Laddad </lecturer>
	</lecturers>
</specs>

<tagline>Practical Aspect-Oriented Programming.</tagline>
<description>
A software system is the realization of a set of concerns. One of the central 
premises of object-oriented programming is that each concern should be implemented
as a separate module. However, there are certain system-wide concerns,
such as logging, security, performance, and so forth, that often need to be
addressed in many, if not all of the modules. Consequently, the code to handle
these system-wide concerns may be mixed in with the core logic of a huge number
of modules, resulting in lower productivity, poor quality, and systems that are
hard to evolve.<newline />
Aspect-oriented programming overcomes these problems by modularizing the system-wide concerns.<newline />
AspectJ enables AOP programming in Java by adding a few new language constructs.
By using Java as the base language and creating a final system that is compatible
with Java byte code specification, AspectJ passes on all the benefits of Java.
The use of Java as the base language also makes AspectJ a relatively easy language to learn.<newline />
The course is divided into three parts.
The first part introduces AOP and AspectJ and will be helpful to students
wanting to learn or advance their knowledge of AspectJ.
The second and third parts present examples of everyday situations in which
you can use simple and easy AspectJ solutions to implement common system
requirements such as logging, policy enforcement, resource pooling, business rules,
thread-safety, authentication and authorization, as well as transaction management.
</description>
<contents>
<topic> In-depth coverage of AOP and AspectJ</topic>
<topic> Design patterns and idioms</topic>
<topic> Solutions to real-world problems</topic>
<topic> Much reusable code content</topic>
<topic> AspectJ version 1.1</topic>
</contents>
<book>
<img src="8032.jpg" border="0" alt="AspectJ in Action" align="Left" />
AspectJ in Action<newline/>
Ramnivas Laddad<newline/>
(July 2003, 512 pages)<newline/>
ISBN: 1930110936</book>
</course>