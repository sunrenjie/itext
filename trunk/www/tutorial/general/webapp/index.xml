<?xml version="1.0" encoding="UTF-8" ?> 
<site:page
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:site="http://www.lowagie.com/iText/site" >
	<site:metadata>
		<site:title>iText in a Web Application</site:title>
		<site:summary>How-to use iText in Web Applications.</site:summary>
		<site:keywords>PDF, JAVA, iText, Servlet, JSP, examples, Lowagie, Bruno</site:keywords>
		<site:amazonbooks>
			<site:book asin="0596000405">Java Servlet Programming (2nd Edition)</site:book>
			<site:keyword>JAVA Servlets</site:keyword>
			<site:keyword>J2EE</site:keyword>
			<site:keyword>JSP</site:keyword>
		</site:amazonbooks>
		<site:updated>$Date$</site:updated>
		<site:author>Bruno Lowagie</site:author>
	</site:metadata>
	
	<site:examples>
		<site:webapp name="ROOT">
			<site:webxml>web.xml</site:webxml>
			<site:welcome>index.jsp</site:welcome>
		</site:webapp>
		<site:example>
			<site:java src="HelloWorldServlet" standalone="no" webapp="ROOT" />
			<site:extrajar>servlet.jar</site:extrajar>
			<site:description>Generates a simple 'Hello World' file from a servlet (PDF, HTML or RTF)</site:description>
			<site:path name="presentationtype=pdf">http://blowagie.users.mcs2.netarray.com/servlet/HelloWorld?presentationtype=pdf</site:path>
			<site:path name="presentationtype=html">http://blowagie.users.mcs2.netarray.com/servlet/HelloWorld?presentationtype=html</site:path>
			<site:path name="presentationtype=rtf">http://blowagie.users.mcs2.netarray.com/servlet/HelloWorld?presentationtype=rtf</site:path>
		</site:example>
		<site:example>
			<site:java src="OutSimplePdf" standalone="no" webapp="ROOT" />
			<site:extrajar>servlet.jar</site:extrajar>
			<site:description>Generates a simple PDF file</site:description>
			<site:path name="without message">http://blowagie.users.mcs2.netarray.com/servlet/simple.pdf</site:path>
			<site:path name="with message">http://blowagie.users.mcs2.netarray.com/servlet/simple.pdf?msg=Hello+World</site:path>
		</site:example>
		<site:example>
			<site:java src="SilentPrintServlet" standalone="no" webapp="ROOT" />
			<site:extrajar>servlet.jar</site:extrajar>
			<site:description>Explains how to print silently via Servlet/Browser.</site:description>
			<site:path name="try it!">http://blowagie.users.mcs2.netarray.com/servlet/silentprint</site:path>
		</site:example>
		<site:example>
			<site:java jsp="HelloWorld.jsp" standalone="no" webapp="ROOT" />
			<site:description>Generates a simple 'Hello World' file from a JSP page</site:description>
			<site:path name="pdf">http://blowagie.users.mcs2.netarray.com/HelloWorld.jsp</site:path>
		</site:example>
	</site:examples>
	
	<site:chapter>
	
	<site:section name="MyJavaServer">
		<site:sectiontitle>MyJavaServer.com</site:sectiontitle>
<div>
<a href="http://www.myjavaserver.com/"><img src="http://www.myjavaserver.com/images/main/mycgiserver_logo_1.gif" align="right" /></a>
All the examples in this chapter are hosted at <a href="http://www.myjavaserver.com/">MyJavaServer.com</a>.
<a href="http://www.myjavaserver.com/">MyJavaServer.com</a> is a free J2EE
hosting service, that is part of the <a href="http://www.javalobby.org/">Javalobby</a> network of Java
developer sites. As a Java developer, you can get a free <a href="http://www.javalobby.org/">Javalobby</a> membership.
This entitles you to great offers like free books, downloads, a weekly
newsletter with the latest Java news and announcements, and access to
a personalized version of the biggest Javadocs collection on the web:
<a href="http://www.jdocs.com/">JDocs.com</a>. In addition, you can also
create your own free Java blog at the Java blogging site,
<a href="http://www.jroller.com">JRoller.com</a>.  
</div>
	</site:section>
	
	<site:section name="HelloWorld">
		<site:sectiontitle>Hello World</site:sectiontitle>
<div>
In the general <site:tutorial chapter="/general" section="5steps">Hello World</site:tutorial> example,
we created a Hello World PDF file from a standalone Java program.
Now we are going to do exactly the same thing, but instead of sending the generated document to
a FileOutputStream, we are going to send everything to the OutputStream of a HttpServletResponse object:
<pre class="commandline">PdfWriter.getInstance(document, response.getOutputStream());</pre>
In the example, we accept a parameter <span class="commandline">presentationtype</span> that
can be one of the following values:<ul><li>pdf</li><li>html</li><li>rtf</li></ul>
Depending on the parameter you passed, you should see a PDF, HTML or RTF page in your browser.
<site:source class="HelloWorldServlet" />
Remark that I didn't say 'you <i>will</i> see a PDF, HTML or RTF page in your browser'.
It <i>should</i> work on all browsers, but we know it <i>won't</i> work on some.
For instance: we have set the ContentType to PDF:
<pre class="commandline">response.setContentType("application/pdf");</pre>
but some browsers look at the file extension, rather than the content-type
(don't ask me why, don't ask me which browsers). That's why we are going to
use something that looks like a pdf-file (with the correct extension) as url-pattern
in out <a href="web.xml">web.xml</a> file:
<pre class="commandline">&lt;servlet-mapping&gt;
  &lt;servlet-name&gt;OutSimplePdf&lt;/servlet-name&gt;
  &lt;url-pattern&gt;/servlet/simple.pdf&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;</pre>
Another thing some browsers need to know in advance (otherwise they just give
you a blank page), is the content-length of the PDF. The
only way we can work around this, is by buffering the complete file in a
ByteArrayOutputStream. That's a pity, because you risk a timeout in the
browser-server communication if you need to send really big PDFs.
<pre class="commandline">Document document = new Document();
ByteArrayOutputStream baos = new ByteArrayOutputStream();
PdfWriter.getInstance(document, baos);
document.open();
document.add(new Paragraph(msg));
document.close();
response.setContentType("application/pdf");
response.setContentLength(baos.size());
ServletOutputStream out = response.getOutputStream();
baos.writeTo(out);
out.flush();</pre>
<site:source class="OutSimplePdf" />
</div>
	</site:section>
	
	<site:section name="timeout">
		<site:sectiontitle>Workaround for timeout problem</site:sectiontitle>
<div>

</div>
	</site:section>
	
	<site:section name="silentprint">
		<site:sectiontitle>Silent printing</site:sectiontitle>
<div>

</div>
	</site:section>
	
	<site:section name="JSP">
		<site:sectiontitle>Hello World JSP</site:sectiontitle>
<div>
<site:jsp jsp="HelloWorld.jsp" />
</div>
	</site:section>

	</site:chapter>

</site:page>