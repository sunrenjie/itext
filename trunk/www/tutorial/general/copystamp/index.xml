<?xml version="1.0" encoding="UTF-8" ?> 
<site:page
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:site="http://www.lowagie.com/iText/site" >
	<site:metadata>
		<site:title>Working with existing PDF documents</site:title>
		<site:summary>How-to copy/manipulate existing PDF documents.</site:summary>
		<site:keywords>PDF, JAVA, iText, examples, copy PDF, stamp, existing PDF</site:keywords>
		<site:amazonbooks>
			<site:book asin="0321304748">PDF Reference (4th Edition)</site:book>
			<site:book asin="0321305310">Adobe Reader 7 Revealed</site:book>
			<site:keyword>JAVA</site:keyword>
			<site:keyword>PDF</site:keyword>
		</site:amazonbooks>
		<site:updated>$Date$</site:updated>
		<site:author>Bruno Lowagie</site:author>
	</site:metadata>
	
	<site:examples>
		<site:example>
			<site:java src="TwoOnOne" standalone="yes" />
			<site:externalresource>ChapterSection.pdf</site:externalresource>
			<site:result>2on1.pdf</site:result>
			<site:description>Combines 2 pages on 1</site:description>
		</site:example>
		<site:example>
			<site:java src="AddWatermarkPageNumbers" standalone="yes" />
			<site:externalresource>ChapterSection.pdf</site:externalresource>
			<site:externalresource>watermark.jpg</site:externalresource>
			<site:result>watermark_pagenumbers.pdf</site:result>
			<site:description>Adds pagenumbers and a watermark to an existing document</site:description>
		</site:example>
		<site:example>
			<site:java src="Register" standalone="yes" />
			<site:externalresource>SimpleRegistrationForm.pdf</site:externalresource>
			<site:result>registered.pdf</site:result>
			<site:result>registered_flat.pdf</site:result>
			<site:description>Fills in a form</site:description>
		</site:example>
		<site:example>
			<site:java src="FdfExample" standalone="yes" />
			<site:externalresource>SimpleRegistrationForm.pdf</site:externalresource>
			<site:result>SimpleRegistrationForm.fdf</site:result>
			<site:result>registered_fdf.pdf</site:result>
			<site:description>Creates an FDF and merges it with a PDF</site:description>
		</site:example>
		<site:example>
			<site:java src="XfdfExample" standalone="yes" />
			<site:externalresource>SimpleRegistrationForm.pdf</site:externalresource>
			<site:externalresource>register.xfdf</site:externalresource>
			<site:result>registered_xfdf.pdf</site:result>
			<site:description>merges an XFDF file with a PDF</site:description>
		</site:example>
		<site:example>
			<site:java src="Concatenate" standalone="yes" />
			<site:externalresource>ChapterSection.pdf</site:externalresource>
			<site:externalresource>Destinations.pdf</site:externalresource>
			<site:externalresource>SimpleAnnotations1.pdf</site:externalresource>
			<site:argument>ChapterSection.pdf</site:argument>
			<site:argument>Destinations.pdf</site:argument>
			<site:argument>SimpleAnnotations1.pdf</site:argument>
			<site:argument>concatenated.pdf</site:argument>
			<site:result>concatenated.pdf</site:result>
			<site:description>Concatenates existing PDF files</site:description>
		</site:example>
	</site:examples>
	
	<site:chapter>
	<site:section name="intro">
		<site:sectiontitle>Introduction</site:sectiontitle>
<div>One of the most frequently asked questions on the mailing-list sounds like this:
<i>I have an existing PDF file and I want to change every occurence of the word 'competitor' with the word 'myself'.</i>
Or: <i>I have an existing PDF file and I want to underline every occurence of the word 'FREE'.</i>
If this is what you need, you can stop reading. This just isn't possible with iText.
iText has a <site:doc class="com.lowagie.text.pdf.PdfReader">PdfReader</site:doc> class,
but you can't read the contents of an existing PDF file into plain text (or convert it to
another document format). You can't get any information on the position of a certain word,
let alone change the layout by replacing one word by another one.<br />
This being said, let's see what iText can do.
With <site:doc class="com.lowagie.text.pdf.PdfReader">PdfReader</site:doc>, you can get
all kinds of metadata from an existing PDF, you can read formfields and you can extract pages
as if it were images for use in a new PDF document. Depending on what you want to achieve,
you are going to use one of the following classes to manipulate existing PDF documents:
<ul>
<li><site:doc class="com.lowagie.text.pdf.PdfWriter">PdfWriter:</site:doc> generates a document from scratch,
but has the possibility to import pages. There's one big downside: all interactive features of the imported
pages are lost in the process (annotations, bookmarks, fields,...).</li>
<li><site:doc class="com.lowagie.text.pdf.PdfStamper">PdfStamper:</site:doc> can manipulate the
content of one (1!) existing PDF document. For instance: add pagenumbers and a watermark,
fill and/or flatten formfields, sign or encrypt an existing PDF document,...</li>
<li><site:doc class="com.lowagie.text.pdf.PdfEncryptor">PdfEncryptor:</site:doc> uses PdfStamper
to offer some userfriendly methods for encrypting an existing document.</li>
<li><site:doc class="com.lowagie.text.pdf.PdfCopy">PdfCopy:</site:doc> can concatenate (a selection of) pages
from (one of) multiple existing PDF forms. Can adjust bookmarks, but possible loss of formfields.
No possibility to change content!</li>
<li><site:doc class="com.lowagie.text.pdf.PdfCopyFields">PdfCopyFields:</site:doc> concatenates
multiple PDF documents, keeping the fields (puts the fields of the different sourcefiles in one
Acroform).</li>
</ul>
</div>
	</site:section>
	
	<site:section name="pdfwriter">
		<site:sectiontitle>PdfWriter</site:sectiontitle>
<div>If you want to create a document from scratch, you have to follow the 5 steps as
described in the <site:tutorial chapter="general">Hello World</site:tutorial> chapter.
In <site:tutorial chapter="general" section="step2">step 2</site:tutorial>, you create
a PdfWriter object to which new content will be written.
</div>
	</site:section>
	
	</site:chapter>

</site:page>