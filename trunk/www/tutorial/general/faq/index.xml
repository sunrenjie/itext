<?xml version="1.0" encoding="UTF-8" ?> 
<site:page
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:site="http://www.lowagie.com/iText/site" >
	<site:metadata>
		<site:title>Frequently Asked Questions</site:title>
		<site:summary>This is a basic technical reference that answers some frequently asked questions.</site:summary>
		<site:keywords>PDF, JAVA, iText, examples, FAQ, Lowagie, Bruno</site:keywords>
		<site:amazonbooks>
			<site:book asin="1932394796">iText in Action</site:book>
			<site:book asin="0321304748">PDF Reference (4th Edition)</site:book>
			<site:keyword>PDF</site:keyword>
		</site:amazonbooks>
		<site:updated>$Date$</site:updated>
		<site:author>Bruno Lowagie</site:author>
	</site:metadata>
	
	<site:examples>
		<site:example>
			<site:java src="Measurements" standalone="yes" />
			<site:result>Measurements.pdf</site:result>
			<site:description>Demonstrates the measurement system (points, inches, centimeters)</site:description>
		</site:example>
		<site:example>
			<site:java src="NewPage" standalone="yes" />
			<site:result>NewPage.pdf</site:result>
			<site:description>Shows how to go to a new page or insert a blank page</site:description>
		</site:example>
		<site:example>
			<site:java src="iTextVersion" standalone="yes" />
			<site:result>version.pdf</site:result>
			<site:description>Shows the iText version that was used to generate this example</site:description>
		</site:example>
		<site:example>
			<site:java src="PdfVersion" standalone="yes" />
			<site:result>pdfversion.pdf</site:result>
			<site:description>Change the PDF version of a document</site:description>
		</site:example>
	</site:examples>
	
	<site:chapter>
			
	<site:section name="inaction">
		<site:sectiontitle>In the book</site:sectiontitle>
		<div>
		<site:book>
			<site:bookchapter chapter="2" />
			<site:bookchapter chapter="3" />
			<site:bookchapter chapter="10" />
			<site:bookchapter chapter="14" />
		</site:book>
		</div>
	</site:section>
	<site:section name="measurements">
		<site:sectiontitle>Measurements</site:sectiontitle>
<div>
If you want to create a Rectangle (PageSize), define a margin, choose a font size
or add something at an absolute place, you might wonder what measurement unit
is used: centimeters, inches, points or pixels. In fact, the default measurement
system roughly corresponds to the various definitions of the typographic unit of measurement
known as the point. There are 72 points in 1 inch.<br />
If you want to create a rectangle in PDF that has the size of an A4-page, you have
to calculate the number of points:<ul>
<li>21 cm / 2.54 = 8.2677 inch</li>
<li>8.2677 * 72 = 595 points</li>
<li>29.7 cm / 2.54 = 11.6929 inch</li>
<li>11.6929 * 72 = 842 points</li>
</ul>
<site:source class="Measurements" />
</div>
	</site:section>

	<site:section name="newpage">
		<site:sectiontitle>How to create a new page in iText</site:sectiontitle>
<div>
It strikes me how many times this question is asked on the mailing-list.
The method you need to create a new page isn't that cryptic:
<site:doc class="com.lowagie.text.Document" target="newPage()">document.newPage()</site:doc>.
Of course, there are some little caveats:
<ul><li>If you are construction an Object such as <site:doc class="com.lowagie.text.Section">Section</site:doc>,
you can't just invoke <site:doc class="com.lowagie.text.Document">newPage()</site:doc> on the document;
you should tell the object, that you want to go to the next page.
In this case, you should add a <site:doc class="com.lowagie.text.Chunk" target="NEXTPAGE">Chunk.NEXPAGE</site:doc>
to the object.</li>
<li>If you invoke <span class="commandline">newPage</span>
and the current page is blank, no new page will be added. You can insert blank pages if you
add something 'invisible' to the blank page. In the example below, a
<site:doc class="com.lowagie.text.Chunk" target="NEWLINE">Chunk.NEWLINE</site:doc> is added.
<pre class="commandline">document.newPage();
document.add(Chunk.NEWLINE);
document.newPage();</pre>
Or you can tell the writer the page isn't empty (allthough it IS). This is done with the
method <site:doc class="com.lowagie.text.pdf.PdfWriter" target="setPageEmpty(boolean)">setPageEmpty</site:doc>
<pre class="commandline">document.newPage();
writer.setPageEmpty(false);
document.newPage();</pre></li></ul>
<site:source class="NewPage" />
</div>
	</site:section>
	
	<site:section name="version">
		<site:sectiontitle>iText Version</site:sectiontitle>
<div>
If you file a bugreport or post a question to the <a href="http://news.gmane.org/gmane.comp.java.lib.itext.general">mailing-list</a>,
one of the first questions you will be asked is:<br /><i>What version of iText are you using?</i><br />
There are two ways you can find out the answer. You can open the PDF file in Acrobat and
go to the window File -&gt; Document Properties... Under 'Description' you'll see what library/product
was used as 'PDF Producer'. In the screenshot below, it was <i>iText1.1.2 by lowagie.com (based on itext-paulo-144)</i>.
You can always check the most recent releasenumber on the <a href="http://www.lowagie.com/iText/download.html">iText download page</a>.<br />
<site:image source="metadata.gif">Document Properties Window</site:image><br />
Of course, if a post-processing tool was used, another product will be listed as
PDF Producer. In that case, you can ask the library programmatically for its version
with <site:doc class="com.lowagie.text.Document" target="getVersion()">Document.getVersion()</site:doc>
and send the output to the System.out or System.err.
<site:source class="iTextVersion" />
</div>
	</site:section>
	
	<site:section name="pdfversion">
		<site:sectiontitle>PDF Version</site:sectiontitle>
<div>
Read the Portable Document Format Reference Manual Version 1.6 (section 3.4.1 'File Header' page 68):
<blockquote>The first line of a PDF file is a header identifying the version of the PDF specification
to which the file conforms. For a file conforming to PDF version 1.5, the
header should be
<pre class="commandline">%PDF−1.5</pre></blockquote>
iText generated documents have version PDF-1.4 by default, but you can change
the version with the method <site:doc class="com.lowagie.text.pdf.PdfWriter" target="setPdfVersion(char)">setPdfVersion</site:doc>.
The parameter can be
<site:doc class="com.lowagie.text.pdf.PdfWriter" target="VERSION_1_2">PdfWriter.VERSION_1_2</site:doc>,
<site:doc class="com.lowagie.text.pdf.PdfWriter" target="VERSION_1_3">PdfWriter.VERSION_1_3</site:doc>,
<site:doc class="com.lowagie.text.pdf.PdfWriter" target="VERSION_1_4">PdfWriter.VERSION_1_4</site:doc>,
<site:doc class="com.lowagie.text.pdf.PdfWriter" target="VERSION_1_5">PdfWriter.VERSION_1_5</site:doc> or
<site:doc class="com.lowagie.text.pdf.PdfWriter" target="VERSION_1_6">PdfWriter.VERSION_1_6</site:doc>.
<pre class="commandline">writer.setPdfVersion(PdfWriter.VERSION_1_2);</pre>
Remark: this only changes the header (iText doesn't keep the version in the catalog yet).
If you change the version number to a lower version, you are responsible for
making sure that you don't use newer features.
<site:source class="PdfVersion" />
<site:image source="pdfversion.gif">Document Properties Window</site:image>
</div>
	</site:section>
	
	<site:section name="portability">
		<site:sectiontitle>Why are there some strange characters in the PDF Header?</site:sectiontitle>
<div>
Read the Portable Document Format Reference Manual Version 1.6 (section 3.4.1 'File Header' page 68):
<blockquote>If a PDF file contains binary data, as most do,
it is recommended that the header line be immediately followed by a
comment line containing at least four binary characters—that is, characters whose
codes are 128 or greater. This ensures proper behavior of file transfer applications
that inspect data near the beginning of a file to determine whether to treat the file's
contents as text or as binary.</blockquote>
iText adds these 4 binary characters automatically. The second line of an iText generated PDF file always looks like this when opened in a text editor:
<pre class="commandline">%âãÏÓ</pre>
</div>
	</site:section>
	</site:chapter>

</site:page>
