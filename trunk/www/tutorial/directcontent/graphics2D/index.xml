<?xml version="1.0" encoding="UTF-8" ?> 
<site:page
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:site="http://www.lowagie.com/iText/site" >
	<site:metadata>
		<site:title status="finished">Graphics2D</site:title>
		<site:summary>If you don't want to read all the chapters on PDF syntax, just use the JAVA API</site:summary>
		<site:keywords>PDF, JAVA, iText, examples, PdfContentByte, Graphics, absolute positions, Lowagie, Bruno</site:keywords>
		<site:amazonbooks>
			<site:book asin="1932394796">iText in Action</site:book>
			<site:book asin="0321304748">PDF Reference (4th Edition)</site:book>
		</site:amazonbooks>
		<site:updated>$Date$</site:updated>
		<site:author>Bruno Lowagie</site:author>
	</site:metadata>
	
	<site:examples>
		<site:example>
			<site:java src="G2D" standalone="yes" />
			<site:result>graphics2D.pdf</site:result>
			<site:description>A Simple Graphics2D example</site:description>
		</site:example>
		<site:example>
			<site:java src="ArabicText" standalone="yes" />
			<site:result>arabictext.pdf</site:result>
			<site:description>Drawing arabic text using the Graphics2D object</site:description>
		</site:example>
		<site:example>
			<site:java src="JFreeChartExample" standalone="yes" />
			<site:result>barchart.pdf</site:result>
			<site:result>piechart.pdf</site:result>
			<site:result>xychart.pdf</site:result>
			<site:extrajar>jfreechart.jar</site:extrajar>
			<site:extrajar>jcommon.jar</site:extrajar>
			<site:description>Some JFreeChart examples</site:description>
		</site:example>
	</site:examples>
	
	<site:chapter>

	<site:section name="inaction">
		<site:sectiontitle>In the book</site:sectiontitle>
		<div>
		<site:book>
			<site:bookchapter chapter="12" />
		</site:book>
		</div>
	</site:section>
	<site:section name="graphics2D">
		<site:sectiontitle>The java.awt.Graphics2D object</site:sectiontitle>
<div>
Maybe you really don't want to learn to use PDF Syntax, maybe you really don't
want to learn a complete new API such as iText, maybe you just want to stick to
what you know, in casu, the JAVA API of the JSDK. No problem. In that case, we
have a class that exactly meets your needs:
<site:doc class="com.lowagie.text.pdf.PdfGraphics2D">PdfGraphics2D</site:doc>.
This class extends java.awt.Graphics2D and overrides its methods so that they
produce PDF syntax. Isn't that nice?
(Before you ask: there's also a <site:doc class="com.lowagie.text.pdf.PdfPrinterGraphics2D">PdfGraphics2D</site:doc> object
extending java.awt.print.PrinterGraphics.)<br />
There are several <site:doc class="com.lowagie.text.pdf.PdfContentByte" target="createGraphics(float,%20float)">createGraphics</site:doc> methods
in class PdfContentByte. In the example below, I copied the code of an example in SUN's Graphics2D tutorial literally.
The Graphics2D object I used, was retrieved from a PdfTemplate:
<pre class="commandline"> PdfContentByte cb = writer.getDirectContent();
PdfTemplate tp = cb.createTemplate(w, h);
Graphics2D g2 = tp.createGraphics(w, h, new DefaultFontMapper());</pre>
<site:source class="G2D" />
So if you already know all about Graphics2D in JAVA or if you have programs writing stuff
to a Graphics2D object (for instance to a JPanel in some JFrame), you don't need to learn
all about the PDF syntax, you can use your existing code to write your output to PDF!
For instance, if you are familiar with java.awt.Font, but not that familiar with the Fonts in iText/PDF,
you could use PdfGraphics2D as is done in the next example:
<site:source class="ArabicText" />
The only syntax you need to know is this:
<pre class="commandline">java.awt.Font font = new java.awt.Font("arial", 0, 18);
PdfContentByte cb = writer.getDirectContent();
java.awt.Graphics2D g2 =
    cb.createGraphicsShapes(PageSize.A4.width(), PageSize.A4.height());
g2.setFont(font);
g2.drawString(text, 100, 100);
g2.dispose();</pre>
DO NOT FORGET to call <site:doc class="com.lowagie.text.pdf.PdfGraphics2D" target="dispose()">PdfGraphics2D.dispose()</site:doc>!!!<br /><br />
A good example of how iText can be plugged in into another library that makes extensive use
of Graphics2D can be found at <a href="http://www.jfree.org/jfreechart/">JFree.org</a>.
JFree.org is the home of JFreeChart, one of the most used libraries for creating Charts.
Charts are written to a java.awt.Graphics2D objects, so if you want to have those charts
in PDF, just plug in iText:
<site:source class="JFreeChartExample" />
If you have an Free/Open Source Software application that uses iText in this context,
please send me an example, so I can add it to this chapter.
</div>
	</site:section>
	
	</site:chapter>

</site:page>