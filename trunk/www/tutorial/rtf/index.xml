<?xml version="1.0" encoding="UTF-8" ?> 
<site:page
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:site="http://www.lowagie.com/iText/site" >
	<site:metadata>
		<site:title>Rich Text Format</site:title>
		<site:summary>How-to generate RTF documents using iText.</site:summary>
		<site:keywords>PDF, JAVA, iText, RTF, examples, Lowagie, Bruno</site:keywords>
		<site:amazonbooks>
			<site:book asin="0596004753">RTF Pocket Guide</site:book>
			<site:keyword>JAVA</site:keyword>
			<site:keyword>RTF</site:keyword>
		</site:amazonbooks>
		<site:updated>$Date$</site:updated>
		<site:author>Mark Hall</site:author>
	</site:metadata>
	
	<site:examples>
		<site:example>
			<site:java src="HelloWorld" standalone="yes" />
			<site:result>HelloWorld.rtf</site:result>
			<site:description>Generates a simple 'Hello World!' RTF file</site:description>
		</site:example>
	</site:examples>
	
	<site:chapter>
	<site:section name="rtfpackage">
		<site:sectiontitle>The RTF Package</site:sectiontitle>
		<div>
		  The RTF package is an extension of the iText library and allows iText
		  to output Rich Text Files in additon to PDF files. These files can then
		  be viewed and edited with RTF viewers such as Microsoft Word or OpenOffice.org
		  Writer.
		</div>
		<div>
		  The main class for generating RTF documents is the <site:doc class="com.lowagie.text.rtf.RtfWriter2">RtfWriter2</site:doc>.
		  It supports most of iText's features with the exception of those features listed
		  under the <a href="#unsupported">unsupported features</a>. In addition to this
		  there are a number of extensions to the core iText classes that provide access
		  to RTF specific functionality:<br /><br />
		  <ul>
		    <li>Extensions to core classes
		      <ul>
		        <li><site:tutorial chapter="/rtf/extensions/font">Extended font support</site:tutorial></li>
		        <li><site:tutorial chapter="/rtf/extensions/hf">Extended header/footer support</site:tutorial></li>
		        <li><site:tutorial chapter="/rtf/extensions/table">Extended table cell support</site:tutorial></li>
		      </ul>
		    </li>
		    <li>RTF specific features
		      <ul>
		        <li>Paragraph stylesheets</li>
		        <li><site:tutorial chapter="/rtf/features/tabs">Tab support</site:tutorial></li>
		        <li>Table of contents</li>
		        <li>Page numbering</li>
		        <li>Word 97-2000 RTF for Drawing Objects (Shapes)</li>
		        <li>Direct content</li>
		      </ul>
		    </li>
		    <li><site:tutorial chapter="/rtf/documentsettings">RTF generation settings</site:tutorial></li>
		  </ul>
		</div>
	</site:section>

    <site:section name="introduction">
        <site:sectiontitle>Introduction to RTF</site:sectiontitle>
        <div>
          RTF is the Rich Text Format developed by Microsoft with the aim of providing
          a cross-platform text-based document format. The main advantage that it has
          over PDF is that it can easily be edited with most word processing software.
          Its biggest disadvantage is that it is rendered by the word processing software
          when the RTF document is opened and not when the RTF document is generated.
          This leads to the situation that the document can look slightly different on
          different platforms.<br /><br />
          It is important to remember that RTF is a document description format and
          when iText creates a RTF document, only the description of the document is
          generated. NO RENDERING TAKES PLACE. It is thus impossible to provide access
          to such things as page numbers or page events.<br /><br />
          Apart from these considerations creating an RTF document works just like
          creating any other document with iText.
          
          <div class="subtitle">RtfWriter2 and RtfWriter. Which one to use?</div>
          
          If you are starting with a new iText project, then use the
          <site:doc class="com.lowagie.text.rtf.RtfWriter2">RtfWriter2</site:doc>. It
          generates better RTF code, provides more functionality and is actively maintained.
          The old RtfWriter is only provided for backward compatability and will be
          removed by the end of 2007.<br /><br />
          If you have an existing project using the old RtfWriter, read the section on
          <a href="#transition">transitioning to the RtfWriter2</a>.
        </div>
    </site:section>
    
    <site:section name="creatingrtf">
        <site:sectiontitle>Creating a basic RTF document</site:sectiontitle>
        <div>
          Creating a basic RTF document works just like creating a basic PDF document:
          <pre class="commandline">
Document document = new Document();
RtfWriter2.getInstance(document,
	new FileOutputStream("testRTFdocument.rtf"));
document.open();
document.add(new Paragraph("Hello World!"));
document.close();
          </pre>
          <site:source class="HelloWorld" />
          You can then use the objects described in <site:tutorial chapter="/" section="part2">Using High Level Objects</site:tutorial>
          to create more complex RTF documents.
        </div>
    </site:section>
    
    <site:section name="unsupported">
        <site:sectiontitle>Unsupported iText features</site:sectiontitle>
        <div>
          A number of iText features are not supported in the RtfWriter2 due to the fact
          that they either have not been implemented or are not supported by the
          RTF format itself. The following list may not be complete, since the development
          of the RtfWriter2 sometimes lags behind the development of the core library.<br />
          <dl>
            <dt style="font-weight: bold">Images other than JPEG, PNG, BMP and WMF</dt>
            <dd>Only these image types are supported natively in the RTF format.</dd>
            <dt style="font-weight: bold">Rotated images</dt>
            <dd></dd>
            <dt style="font-weight: bold">Nested tables</dt>
            <dd></dd>
            <dt style="font-weight: bold">Embedded fonts</dt>
            <dd></dd>
            <dt style="font-weight: bold">Lists with non-bullet symbols</dt>
            <dd>Support may be added on demand.</dd>
            <dt style="font-weight: bold">Table.setSpaceInsideCell and Table.setSpaceBetweenCells</dt>
            <dd></dd>
            <dt style="font-weight: bold">Table.setSpaceBefore</dt>
            <dd>Will be supported in the future.</dd>
            <dt style="font-weight: bold">Table.padding</dt>
            <dd></dd>
            <dt style="font-weight: bold">Watermarks</dt>
            <dd></dd>
            <dt style="font-weight: bold">Encryption</dt>
            <dd></dd>
            <dt style="font-weight: bold">Viewer preferences</dt>
            <dd>These only apply to the Adobe Acrobat Viewer.</dd>
          </dl>
        </div>
    </site:section>
    
    <site:section name="transition">
        <site:sectiontitle>Transitioning from the RtfWriter to the RtfWriter2</site:sectiontitle>
        <div>
          The <site:doc class="com.lowagie.text.rtf.RtfWriter">RtfWriter</site:doc>
          is the old RTF generating class. It has been deprecated and superceded by
          the <site:doc class="com.lowagie.text.rtf.RtfWriter2">RtfWriter2</site:doc>
          which is now the only class that should be used for RTF generation. The
          RtfWriter is now only provided for backward compatability and will be removed
          from the library by the end of 2007. The RtfWriter receives NO UPDATES.<br /><br />
          Transitioning from the old RtfWriter to the new RtfWriter2 should by no problem
          if you do not use any of the extensions provided for the old RtfWriter. If you
          did use extensions for the old RtfWriter the following table shows which classes
          provide the equivalent functionality in the new RtfWriter2:
          <table>
            <tr>
		      <td>Old extensions</td>
		      <td>New extensions</td>    
            </tr>
            <tr>
		      <td><site:doc class="com.lowagie.text.rtf.RtfFont">com.lowagie.text.rtf.RtfFont</site:doc></td>
		      <td><site:doc class="com.lowagie.text.rtf.style.RtfFont">com.lowagie.text.rtf.style.RtfFont</site:doc></td>
            </tr>
            <tr>
		      <td><site:doc class="com.lowgaie.text.rtf.HeaderFooter">com.lowgaie.text.rtf.HeaderFooter</site:doc></td>
		      <td><site:doc class="com.lowagie.text.rtf.headerfooter.RtfHeaderFooter">com.lowagie.text.rtf.headerfooter.RtfHeaderFooter</site:doc></td>
            </tr>
            <tr>
		      <td><site:doc class="com.lowagie.text.rtf.HeaderFooters">com.lowagie.text.rtf.HeaderFooters</site:doc></td>
		      <td><site:doc class="com.lowagie.text.rtf.headerfooter.RtfHeaderFooterGroup">com.lowagie.text.rtf.headerfooter.RtfHeaderFooterGroup</site:doc></td>
            </tr>
            <tr>
		      <td><site:doc class="com.lowagie.text.rtf.RtfPageNumber">com.lowagie.text.rtf.RtfPageNumber</site:doc></td>
		      <td><site:doc class="com.lowagie.text.rtf.field.RtfPageNumber">com.lowagie.text.rtf.field.RtfPageNumber</site:doc></td>
            </tr>
            <tr>
		      <td><site:doc class="com.lowagie.text.rtf.RtfTOC">com.lowagie.text.rtf.RtfTOC</site:doc></td>
		      <td><site:doc class="com.lowagie.text.rtf.field.RtfTableOfContents">com.lowagie.text.rtf.field.RtfTableOfContents</site:doc></td>
            </tr>
            <tr>
		      <td><site:doc class="com.lowagie.text.rtf.RtfTOCEntry">com.lowagie.text.rtf.RtfTOCEntry</site:doc></td>
		      <td><site:doc class="com.lowagie.text.rtf.field.RtfTOCEntry">com.lowagie.text.rtf.field.RtfTOCEntry</site:doc></td>
            </tr>
            <tr>
		      <td><site:doc class="com.lowagie.text.rtf.RtfTableCell">com.lowagie.text.rtf.RtfTableCell</site:doc></td>
		      <td><site:doc class="com.lowagie.text.rtf.table.RtfCell">com.lowagie.text.rtf.table.RtfCell</site:doc></td>
            </tr>
          </table>
        </div>
    </site:section>

	<site:section name="tocsupport">
		<site:sectiontitle>Table of contents support</site:sectiontitle>
<div>
The <span class="commandline">RtfWriter2</span> also supports the creation of a table
of contents and the addition of entries into that table of contents. There is one
limitation and that is that the actual table of contents will have to be generated
by the RTF viewer application, because iText does not know how to render RTF documents
and can therefore not calculate the correct page numbers. When creating the
<span class="commandline">RtfTableOfContents</span> it is necessary to specify
the text that is displayed before the field is updated by the viewer.<br />
<br />
<div class="subtitle">Adding a table of contents</div>
You can add the actual table of contents anywhere in the document.
Simply create an instance of
<span class="commandline">com.lowagie.text.rtf.toc.RtfTableOfContents</span>
and add it to a paragraph. The constructor takes the default string to display
and the font to use as parameters.
<pre class="commandline">
Paragraph para = new Paragraph();
para.add(new RtfTableOfContents(
	"RIGHT CLICK AND HERE AND SELECT \"UPDATE FIELD\" TO UPDATE.", 
	new Font()));
doc.add(para);</pre>
<br />
<div class="subtitle">Adding entries to the table of contents</div>
You can add entries to the table of contents before or after you've added
the actual table of contents. It's as simple as adding an instance of RtfTOCEntry
to the document.
<pre class="commandline">
RtfTOCEntry tocEntry =
	new RtfTOCEntry("Manually added TOC entry", new Font());
document.add(tocEntry);
</pre>
The second possibility is to let the
<span class="commandline">RtfWriter2</span> automatically add
<span class="commandline">RtfTOCEntry</span>s for every Chapter you add.
<pre class="codeBlock">
writer2.setAutogenerateTOCEntries(true);</pre>
<site:source class="RtfTOCandCellborders" />
</div>
	</site:section>

	<site:section name="pagenumberelement">
		<site:sectiontitle>Page number element</site:sectiontitle>
<div>
The <span class="commandline">RtfPageNumber</span> class allows you to add
the number of the current page at any position in the document. The primary use is
in headers or footers with special formatting.
<pre class="commandline">
Table headerTable = new Table(3);
headerTable.addCell("Document header");
Cell pageNumberCell = new Cell();
pageNumberCell.add(new RtfPageNumber());
pageNumberCell.add(new Chunk(" of "));
pageNumberCell.add(new RtfTotalPageNumber());
headerTable.addCell(pageNumberCell);
headerTable.addCell("Company Name");
HeaderFooter header = new RtfHeaderFooter(headerTable);
document.setHeader(header);</pre>
<site:source class="RtfWithHeadersFooters" />.
</div>
	</site:section>

	</site:chapter>

</site:page>