<?xml version="1.0" encoding="UTF-8" ?> 
<site:page
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:site="http://www.lowagie.com/iText/site" >
	<site:metadata>
		<site:title status="finished">Selected examples: EPS, TIFF, Barcodes</site:title>
		<site:summary>Selected examples: Embedding PostScript, importing TIFF files, Barcodes</site:summary>
		<site:keywords>PDF, JAVA, iText, examples, tiff, eps, barcodes, PostScript, Lowagie, Bruno</site:keywords>
		<site:amazonbooks>
			<site:book asin="1932394796">iText in Action</site:book>
			<site:book asin="0201379228">PostScript(R) Language Reference (3rd Edition)</site:book>
			<site:book asin="0201101793">PostScript(R) Language Tutorial and Cookbook</site:book>
			<site:book asin="0943779502">Getting Started With Bar Codes: A Systematic Guide</site:book>
		</site:amazonbooks>
		<site:updated>$Date$</site:updated>
		<site:author>Bruno Lowagie</site:author>
	</site:metadata>
	
	<site:examples>
		<site:example>
			<site:java src="Tiff2Pdf" standalone="yes" />
			<site:externalresource>12.tif</site:externalresource>
			<site:externalresource>338814-00.tif</site:externalresource>
			<site:externalresource>odd.tif</site:externalresource>
			<site:externalresource>even.tif</site:externalresource>
			<site:argument>12.tif</site:argument>
			<site:argument>338814-00.tif</site:argument>
			<site:argument>even.tif</site:argument>
			<site:argument>odd.tif</site:argument>
			<site:result>12.pdf</site:result>
			<site:result>338814-00.pdf</site:result>
			<site:result>even.pdf</site:result>
			<site:result>odd.pdf</site:result>
			<site:description>Converts some tiff files to PDF</site:description>
		</site:example>
		<site:example>
			<site:java src="OddEven" standalone="yes" />
			<site:externalresource>odd.tif</site:externalresource>
			<site:externalresource>even.tif</site:externalresource>
			<site:argument>odd.tif</site:argument>
			<site:argument>even.tif</site:argument>
			<site:argument>combined.pdf</site:argument>
			<site:result>combined.pdf</site:result>
			<site:description>Combines 2 tiffs, one with odd, another with even pages into 1 combined PDF</site:description>
		</site:example>
		<site:example>
			<site:java src="Barcodes" standalone="yes" />
			<site:result>barcodes.pdf</site:result>
			<site:description>List with different barcodes</site:description>
		</site:example>
		<site:example>
			<site:java src="ExampleEAN128" standalone="yes" />
			<site:result>ean128.pdf</site:result>
			<site:description>Example barcode ean128</site:description>
		</site:example>
		<site:example>
			<site:java src="ExamplePDF417" standalone="yes" />
			<site:result>pdf417.pdf</site:result>
			<site:description>Example barcode pdf417</site:description>
		</site:example>
	</site:examples>
	
	<site:chapter>
			
	<site:section name="inaction">
		<site:sectiontitle>In the book</site:sectiontitle>
		<div>
		<site:book>
			<site:bookchapter chapter="5" />
		</site:book>
		</div>
	</site:section>
	<site:section name="eps">
		<site:sectiontitle>Encapsulated PostScript</site:sectiontitle>
<div>
Since version 2.0.3 of iText, it's no longer possible to add EPS images into your document.
</div>
	</site:section>
	<site:section name="tiff">
		<site:sectiontitle>Tiff</site:sectiontitle>
<div>
iText also supports TIFF. TIFF is the Tagged Image File Format.
It was developed in 1986 by an industry committee chaired by the
Aldus Corporation (now part of Adobe). Microsoft and Hewlett-Packard
were also on the committee. It is unique in that it incorporates
multiple compression techniques, allowing the user to specify
the best format for a type of image, and that one file can contain
multiple images. TIFFs are common in desktop publishing,
faxing, and medical imaging applications.<br />
The examples below can be used as standalone tools.
Tiff2Pdf converts a TIFF file into a PDF file.
If the TIFF has more than one image, a PDF with more than one page will be generated.
<site:source class="Tiff2Pdf" />
The OddEven example was inspired by a <a href="http://sourceforge.net/projects/tifftools/">tiffmesh example</a>,
which is part of another SourceForge library <a href="http://sourceforge.net/projects/tifftools/">TiffTools</a>.
Tiffmesh is a utility to mesh together two TIFF files containing odd and even pages into one big TIFF file.
So if you use a scanner to scan in text from double-sided pages, you can scan the odd pages into one tiff
and the even pages into another one. With Tiffmesh you can knit both files together into one tiff.
With the OddEven-example/tool, you can do the same to combine both files into one PDF document.
<site:source class="OddEven" />
</div>
	</site:section>
	
	<site:section name="barcode">
		<site:sectiontitle>Barcodes</site:sectiontitle>
<div>iText also comes with a number of classes that generate barcodes.
The following types are supported:
<ul>
<li><site:doc class="com.lowagie.text.pdf.Barcode39">Barcode39:</site:doc> code 39 and code 39 extended</li>
<li><site:doc class="com.lowagie.text.pdf.Barcode128">Barcode128:</site:doc>
<ul>
<li><b>CODE128</b> - plain barcode 128.</li>
<li><b>CODE128_UCC</b> - support for UCC/EAN-128 with a full list of AI.</li>
<li><b>CODE128_RAW</b> - raw mode. The code attribute has the actual codes from 0 to 105 followed by '&#92;uffff' and the human readable text.</li>
</ul></li>
<li><site:doc class="com.lowagie.text.pdf.BarcodeEAN">BarcodeEAN:</site:doc> EAN13, EAN8, UPCA, UPCE, and EAN with supplemental 5, EAN with supplemental 5, EAN with supplemental 2</li>
<li><site:doc class="com.lowagie.text.pdf.BarcodeEANSUPP">BarcodeEANSUPP:</site:doc> takes 2 barcodes, an EAN/UPC and a supplemental</li>
<li><site:doc class="com.lowagie.text.pdf.BarcodeInter25">BarcodeInter25:</site:doc> interleaved 2 of 5</li>
<li><site:doc class="com.lowagie.text.pdf.BarcodePostnet">BarcodePostnet:</site:doc> postnet and planet</li>
<li><site:doc class="com.lowagie.text.pdf.BarcodePDF417">BarcodePDF417:</site:doc> the 2D barcode PDF417</li>
<li><site:doc class="com.lowagie.text.pdf.BarcodeCodabar">BarcodeCodabar:</site:doc> codabar</li>
</ul>
This is an code example to generate an EAN-barcode with value 9780201615883:
<pre class="commandline">PdfContentByte cb = writer.getDirectContent();
BarcodeEAN codeEAN = new BarcodeEAN();
codeEAN.setCodeType(codeEAN.EAN13);
codeEAN.setCode("9780201615883");
Image imageEAN = codeEAN.createImageWithBarcode(cb, null, null);
document.add(new Phrase(new Chunk(imageEAN, 0, 0)));</pre>
<site:source class="Barcodes" />
<site:source class="ExampleEAN128" />
<site:source class="ExamplePDF417" />
All barcode classes implement the abstract class
<site:doc class="com.lowagie.text.pdf.Barcode">Barcode</site:doc>.
Please read the API documentation to see the defaults for every specific barcode type,
and for the different methods to change the 'look' of the barcode.
To add a barcode to a document with iText, convert it to an Image or PdfTemplate object
using <site:doc class="com.lowagie.text.pdf.Barcode" target="createImageWithBarcode(com.lowagie.text.pdf.PdfContentByte,%20java.awt.Color,%20java.awt.Color)">createImageWithBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)</site:doc>
or <site:doc class="com.lowagie.text.pdf.Barcode" target="createTemplateWithBarcode(com.lowagie.text.pdf.PdfContentByte,%20java.awt.Color,%20java.awt.Color)">createTemplateWithBarcode(com.lowagie.text.pdf.PdfContentByte, java.awt.Color, java.awt.Color)</site:doc>.
The colors specify the color of the bars and text are:
<table border="1">
<tr>
<th>barColor</th>
<th>textColor</th>
<th>Result</th>
</tr>
<tr>
<td>null</td>
<td>null</td>
<td>bars and text painted with current fill color</td>
</tr>
<tr>
<td>barColor</td>
<td>null</td>
<td>bars and text painted with barColor</td>
</tr>
<tr>
<td>null</td>
<td>textColor</td>
<td>bars painted with current color<br />text painted with textColor</td>
</tr>
<tr>
<td>barColor</td>
<td>textColor</td>
<td>bars painted with barColor<br />text painted with textColor</td>
</tr>
</table>
If you want a barcode without any text, just set the font to <span class="commandline">null</span>
with <site:doc class="com.lowagie.text.pdf.Barcode" target="setFont(com.lowagie.text.pdf.BaseFont)">setFont(com.lowagie.text.pdf.BaseFont)</site:doc>
<br />
Note that you also can create a textless java.awt.Image of the barcode object with
<site:doc class="com.lowagie.text.pdf.Barcode" target="createAwtImage(java.awt.Color,%20java.awt.Color)">createAwtImage(java.awt.Color, java.awt.Color)</site:doc>.
</div>
	</site:section>
	</site:chapter>
</site:page>