<?xml version="1.0" encoding="UTF-8" ?> 
<site:page
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:site="http://www.lowagie.com/iText/site" >
	<site:metadata>
		<site:title>Images</site:title>
		<site:summary>Deals with all types of images that are supported by iText</site:summary>
		<site:keywords>PDF, JAVA, iText, examples, tiff, gif, jpeg, Lowagie, Bruno</site:keywords>
		<site:amazonbooks>
			<site:keyword>GIF</site:keyword>
			<site:keyword>JPEG</site:keyword>
			<site:keyword>TIFF</site:keyword>
		</site:amazonbooks>
		<site:updated>$Date$</site:updated>
		<site:author>Bruno Lowagie</site:author>
	</site:metadata>
	
	<site:examples>
		<site:example>
			<site:java src="Images" standalone="yes" />
			<site:externalresource>otsoe.jpg</site:externalresource>
			<site:externalresource>iText.bmp</site:externalresource>
			<site:externalresource>pngnow.png</site:externalresource>
			<site:externalresource>iText.tif</site:externalresource>
			<site:externalresource>getacro.gif</site:externalresource>
			<site:externalresource>iText.wmf</site:externalresource>
			<site:result>Images.pdf</site:result>
			<site:description>Adds different formats of images to a document.</site:description>
		</site:example>
		<site:example>
			<site:java src="RawData" standalone="yes" />
			<site:externalresource>otsoe.jpg</site:externalresource>
			<site:result>rawdata.pdf</site:result>
			<site:description>Using raw image data to construct an Image object.</site:description>
		</site:example>
		<site:example>
			<site:java src="AwtImage" standalone="yes" />
			<site:externalresource>H.gif</site:externalresource>
			<site:result>awt_image.pdf</site:result>
			<site:description>Using a java.awt.Image object to construct an Image object.</site:description>
		</site:example>
		<site:example>
			<site:java src="Alignment" standalone="yes" />
			<site:externalresource>vonnegut.gif</site:externalresource>
			<site:externalresource>otsoe.jpg</site:externalresource>
			<site:externalresource>hitchcock.png</site:externalresource>
			<site:result>alignment.pdf</site:result>
			<site:description>Alignment of images.</site:description>
		</site:example>
		<site:example>
			<site:java src="ImagesAlignment" standalone="yes" />
			<site:externalresource>vonnegut.gif</site:externalresource>
			<site:externalresource>otsoe.jpg</site:externalresource>
			<site:externalresource>hitchcock.png</site:externalresource>
			<site:result>imagesAlignment.pdf</site:result>
			<site:description>Alignment and wrapping of images.</site:description>
		</site:example>
		<site:example>
			<site:java src="AbsolutePositions" standalone="yes" />
			<site:externalresource>hitchcock.png</site:externalresource>
			<site:result>absolutepositions.pdf</site:result>
			<site:description>Adding an Image at absolute positions.</site:description>
		</site:example>
		<site:example>
			<site:java src="Scaling" standalone="yes" />
			<site:externalresource>otsoe.jpg</site:externalresource>
			<site:result>scaling.pdf</site:result>
			<site:description>Scaling images.</site:description>
		</site:example>
		<site:example>
			<site:java src="Rotating" standalone="yes" />
			<site:externalresource>otsoe.jpg</site:externalresource>
			<site:result>rotating.pdf</site:result>
			<site:description>Rotating images.</site:description>
		</site:example>
		<site:example>
			<site:java src="AnnotatedImage" standalone="yes" />
			<site:externalresource>otsoe.jpg</site:externalresource>
			<site:externalresource>iText.wmf</site:externalresource>
			<site:result>annotated_images.pdf</site:result>
			<site:description>images and annotations.</site:description>
		</site:example>
		<site:example>
			<site:java src="ImageSequence" standalone="yes" />
			<site:externalresource>otsoe.jpg</site:externalresource>
			<site:externalresource>getacro.gif</site:externalresource>
			<site:result>inSequence.pdf</site:result>
			<site:result>NotInSequence.pdf</site:result>
			<site:description>Adds images to a document, once respecting the order in which they were added, once in the default order.</site:description>
		</site:example>
		<site:example>
			<site:java src="DvdCover" standalone="yes" />
			<site:externalresource>sunflower-front.jpg</site:externalresource>
			<site:externalresource>sunflower-back.jpg</site:externalresource>
			<site:argument>dvdcover.pdf</site:argument>
			<site:argument>My Sunflower Movie</site:argument>
			<site:argument>808080</site:argument>
			<site:argument>sunflower-front.jpg</site:argument>
			<site:argument>sunflower-back.jpg</site:argument>
			<site:result>dvdcover.pdf</site:result>
			<site:description>Make a DVD Cover.</site:description>
		</site:example>
	</site:examples>
	
	<site:chapter>
	<site:section name="intro">
		<site:sectiontitle>Images</site:sectiontitle>
<div>
<ul>
<li><b>JPEG:</b> Joint Photographic Experts Group. Commonly used to refer to a lossy compression technique, reducing the size of a graphic file by as much as 96%. Usually the best file format for photographs on the Web.</li>
<li><b>GIF:</b> Graphic Interchange Format. A common format for image files, especially suitable for images containing large areas of the same color. GIF format files of simple images are often smaller than the same file would be if stored in JPEG format, but GIF format does not store photographic images as well as JPEG.</li>
<li><b>PNG:</b> Portable Network Graphics. A graphics format designed as the successor to GIF. It features compression, transparency, and progressive loading, like GIF, but it is free of patent restrictions.</li>
<li><b>TIFF:</b> Tagged Image File Format. A file format commonly used for digital scanned images.</li>
<li><b>BMP:</b> Windows bitmap. A common form of bitmap file in Microsoft Windows. Poorly supported by other operating systems and with limited support for colour.</li>
<li><b>WMF:</b> Windows Metafile Format. A vector graphics format for Windows-compatible computers used mostly for word-processing clip art.</li>
<li>basic support for <b>EPS:</b> Encapsulated PostScript; a graphics format that describes an image in the PostScript language.</li>
<li><b>java.awt.Image:</b> a JAVA object that is in the JDK from SUN</li>
</ul>
<site:source class="Images" />
</div>
	</site:section>
	<site:section name="awt">
		<site:sectiontitle>java.awt.Image</site:sectiontitle>
<div>
Toolkit!!!
<site:source class="AwtImage" />
</div>
	</site:section>
	<site:section name="case">
		<site:sectiontitle>Making a DVD Cover</site:sectiontitle>
<div>
One of my hobby's is making short animated movies.
When I have some movies finished I put all those movies on a DVD
and of course I want to keep those DVDs in a nice DVD case with a nice cover.
There are lots of small programs available for download, that help
you make a DVD cover, but I thought to myself why not do it with iText?
So I wrote this example that shows you how to scale an Image to fit into
a certain area and how to set absolute positions.<br />
You can enter the following parameters:
<ul>
<li>the filename</li>
<li>the title (will be displayed if you don't add a side image)</li>
<li>the color (a hexadecimal String of 6 characters, for instance FFFFFF)</li>
<li>the path to the image of the front cover</li>
<li>the path to the image of the back cover</li>
<li>the path to the image of the side cover</li>
</ul>
The photographs in the example are not my own. They are used by courtesy of
<a href="http://www.bigfoto.com">www.bigfoto.com</a>.
<site:source class="DvdCover" />
</div>
	</site:section>
	</site:chapter>
</site:page>