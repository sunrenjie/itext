<?xml version="1.0" encoding="UTF-8" ?> 
<site:page
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:site="http://www.lowagie.com/iText/site" >
	<site:metadata>
		<site:title>The Chunk Object</site:title>
		<site:summary>Describes the functionality of the Chunk object.</site:summary>
		<site:keywords>PDF, JAVA, iText, examples, Chunk, Lowagie, Bruno</site:keywords>
		<site:amazonbooks>
			<site:keyword>PDF</site:keyword>
			<site:keyword>JAVA</site:keyword>
		</site:amazonbooks>
		<site:updated>$Date$</site:updated>
		<site:author>Bruno Lowagie</site:author>
	</site:metadata>
	
	<site:examples>
		<site:example>
			<site:java src="Lines" standalone="yes" />
			<site:result>Lines.pdf</site:result>
			<site:description>Demonstrates how to add lines under, through,... a Chunk</site:description>
		</site:example>
		<site:example>
			<site:java src="SubSupScript" standalone="yes" />
			<site:result>SubSupScript.pdf</site:result>
			<site:description>Demonstrates the use of sub- and superscript</site:description>
		</site:example>
		<site:example>
			<site:java src="Background" standalone="yes" />
			<site:result>Background.pdf</site:result>
			<site:description>How to change the background color of a Chunk</site:description>
		</site:example>
		<site:example>
			<site:java src="Width" standalone="yes" />
			<site:result>Width.pdf</site:result>
			<site:description>How to measure and scale the width of a Chunk</site:description>
		</site:example>
		<site:example>
			<site:java src="Rendering" standalone="yes" />
			<site:result>Rendering.pdf</site:result>
			<site:description>Some special rendering functionality</site:description>
		</site:example>
		<site:example>
			<site:java src="Skew" standalone="yes" />
			<site:result>Skew.pdf</site:result>
			<site:description>Skewing Chunks</site:description>
		</site:example>
		<site:example>
			<site:java src="Generic" standalone="yes" />
			<site:result>Generic.pdf</site:result>
			<site:description>Using the Generic tag to add styles</site:description>
		</site:example>
		<site:example>
			<site:java src="Glossary" standalone="yes" />
			<site:result>Glossary.pdf</site:result>
			<site:description>Other use of the Generic tag: register keywords for a glossary</site:description>
		</site:example>
		<site:example>
			<site:java src="SplitChar" standalone="yes" />
			<site:result>SplitChar.pdf</site:result>
			<site:description>Defining Split Characters</site:description>
		</site:example>
		<site:example>
			<site:java src="Hyphenation" standalone="yes" />
			<site:result>Hyphenation.pdf</site:result>
			<site:extrajar>iTextHYPH.jar</site:extrajar>
			<site:description>Using auto-hyphenation</site:description>
		</site:example>
	</site:examples>
	
	<site:chapter>
	<site:section name="intro">
		<site:sectiontitle>Introduction</site:sectiontitle>
<div>
A Chunk is the smallest significant part of text that can be added to a document.
It is the 'atom' building block of most of the other High Level Text objects.
All the contents of a Chunk are of the same font, fontsize, style, color, etc...
In the following sections, all Chunk-functionality will be described:
</div>
	</site:section>
	
	<site:section name="underline">
		<site:sectiontitle>Adding lines under, through or above a Chunk</site:sectiontitle>
<div>
As you can read in the chapter on <site:tutorial chapter="/objects/fonts" section="extrastyles">Fonts</site:tutorial>,
you can define the style as <site:doc class="com.lowagie.text.Font" target="UNDERLINE">Font.UNDERLINE</site:doc> or
<site:doc class="com.lowagie.text.Font" target="STRIKETHRU">Font.STRIKETHRU</site:doc> to underline the text or
strike through it. This works for RTF and HTML, but in PDF, you get a lot more functionality if you use the method
<site:doc class="com.lowagie.text.Chunk" target="setUnderline(java.awt.Color,%20float,%20float,%20float,%20float,%20int)">Chunk.setUnderline</site:doc>.
There are two variations of this method:
<ul><li>
<site:doc class="com.lowagie.text.Chunk" target="setUnderline(float,%20float)">Chunk.setUnderline(float thickness, float yPosition)</site:doc> draws a line that has the
length of the Chunk, is <span class="commandline">thickness</span> points thick and positioned <span class="commandline">yPosition</span> above the baseline of the Chunk.
<pre class="commandline">Chunk underlined = new Chunk("underlined");
underlined.setUnderline(0.2f, -2f);
Chunk strikethru = new Chunk("strike through example");
strikethru.setUnderline(0.5f, 3f);</pre></li>
<li>
<site:doc class="com.lowagie.text.Chunk" target="setUnderline(java.awt.Color,%20float,%20float,%20float,%20float,%20int)">Chunk.setUnderline(Color color, float thickness, float thicknessMul, float yPosition, float yPositionMul, int cap)</site:doc>
lets you define the color of the line. You can set the absolute thickness and y postition with
<span class="commandline">thickness</span> and <span class="commandline">yPosition</span>,
but you can also let these values depend on the fontsize with
<span class="commandline">thicknessMul</span> and <span class="commandline">yPositionMul</span>.
In the example, the same Chunk with the same linedefinitions is written twice, but with a different
fontsize. As you can see, some lines vary along with the fontsize, others don't. This all depends
on the parameters that were passed with the method setUnderline.
Finally you can define the line cap style (see Table 4.4 in the PDF Reference Manual).<br />
<site:image source="linecap.gif">line cap styles</site:image>
<pre class="commandline">Chunk c = new Chunk("Multiple lines");
c.setUnderline(new Color(0xFF, 0x00, 0x00),
	0.0f, 0.3f, 0.0f, 0.4f,
	PdfContentByte.LINE_CAP_ROUND);
c.setUnderline(new Color(0x00, 0xFF, 0x00),
	5.0f, 0.0f, 0.0f, -0.5f,
	PdfContentByte.LINE_CAP_PROJECTING_SQUARE);
c.setUnderline(new Color(0x00, 0x00, 0xFF),
	0.0f, 0.2f, 15.0f, 0.0f,
	PdfContentByte.LINE_CAP_BUTT);</pre></li></ul>
<site:source class="Lines" />
</div>
	</site:section>
	
	<site:section name="subsup">
		<site:sectiontitle>Sub- and Superscript</site:sectiontitle>
<div>
If you want to add a Chunk above or below the current y-position,
you can use the method <site:doc class="com.lowagie.text.Chunk" target="setTextRise(float)">setTextRise</site:doc>.
In the example, we marked the baseline with <span class="commandline">c.setUnderline(new Color(0xC0, 0xC0, 0xC0), 0.2f, 0.0f, 0.0f, 0.0f, PdfContentByte.LINE_CAP_BUTT);</span>
to demonstrate how a positive textrise puts text above the baseline and a negative textrise below.<br />
Remark that 'underline' definitions are not affected by this value.
The underline has to follow the baseline otherwise mixing normal text
and superscript would cause a discontinuity. As for subscript: it doesn't
have much sense mixing it with underline text.
<site:source class="SubSupScript" />
</div>
	</site:section>
	
	<site:section name="background">
		<site:sectiontitle>Changing the background color</site:sectiontitle>
<div>
With the methods <site:doc class="com.lowagie.text.Chunk" target="setBackground(java.awt.Color)">setBackground(Color color)</site:doc> and
<site:doc class="com.lowagie.text.Chunk" target="setBackground(java.awt.Color,%20float,%20float,%20float,%20float)">setBackground(Color color, float extraLeft, float extraBottom, float extraRight, float extraTop)</site:doc>,
you can change the background area of a Chunk (for instance to highlight a word). The first method fills the box that surrounds the Chunk,
with the second method, you can make the rectangle bigger or smaller.
<site:source class="Background" />
</div>
	</site:section>
	
	</site:chapter>

</site:page>