<itext>
	<paragraph font="Helvetica" size="11">$Date$</paragraph>
	<newline />
	<newline />
	<chapter numberdepth="0">
		<title font="Helvetica" size="18" leading="30">Chapter I: Getting Started</title>
		<newline />
		<section>
			<title size="14" color="#008080" leading="25">Creation of a document in 5 steps: Hello World</title>
			<paragraph font="Helvetica" size="11" align="Justify">
				It's a good tradition to start a tutorial with a very simple example and what other
				example could we choose than a small standalone application that creates a PDF document
				containing 1 message: Hello World.<newline />
				You can find the source code of all the examples at the end of each chapter.
				Jump to the source code of the first example by clicking here:
				<anchor reference="#Chap0101" font="Helvetica" size="11" color="#008080">Chap0101.java</anchor>.
			</paragraph>
			<newline />
			<paragraph font="Helvetica" size="11" align="Justify">
				These are the 5 steps to create a PDF document using iText:<newline /><newline />
				<anchor reference="#step1" font="Helvetica" size="11" color="#008080" style="bold">Step 1:</anchor><newline />
				Create an instance of the <chunk font="Courier">com.lowagie.text.Document</chunk>-object:<newline />
				<chunk font="Courier" size="9">Document document = new Document();</chunk><newline />
				<newline />
				<anchor reference="#step2" font="Helvetica" size="11" color="#008080" style="bold">Step 2:</anchor><newline />
				Create a Writer that listens to this document and writes the document to the OutputStream of your choice:<newline />
				<chunk font="Courier" size="9">PdfWriter.getInstance(document, new FileOutputStream("Chap0101.pdf"));</chunk><newline />
				<newline />
				<anchor reference="#step3" font="Helvetica" size="11" color="#008080" style="bold">Step 3:</anchor><newline />
				Open the document:<newline />
				<chunk font="Courier" size="9">document.open();</chunk><newline />
				<newline />
				<anchor reference="#step4" font="Helvetica" size="11" color="#008080" style="bold">Step 4:</anchor><newline />
				Add content to the document:<newline />
				<chunk font="Courier" size="9">document.add(new Paragraph("Hello World"));</chunk><newline />
				<newline />
				<anchor reference="#step5" font="Helvetica" size="11" color="#008080" style="bold">Step 5:</anchor><newline />
				Close the document:<newline />
				<chunk font="Courier" size="9">document.close();</chunk><newline />
			</paragraph>
		</section>
		<newpage />
		<section>
			<title size="14" color="#008080" leading="25"><anchor name="step1" size="14" color="#008080" leading="25">Examining step 1: The Document Object</anchor></title>
			<paragraph font="Helvetica" size="11" align="Justify">
				The <chunk font="Courier">com.lowagie.text.Document</chunk>-object has 3 constructors:<newline />
				<chunk font="Courier" size="9">public Document();</chunk><newline />
				<chunk font="Courier" size="9">public Document(Rectangle pageSize);</chunk><newline />
				<chunk font="Courier" size="9">public Document(Rectangle pageSize, int marginLeft, int marginRight, int marginTop, int marginBottom);</chunk>
				<newline />
				The first constructor calls the second one, with
				<chunk font="Courier">PageSize.A4</chunk> as parameter.	The second constructor calls the third one, with
				<chunk font="Courier">36</chunk> as value for each margin.
			</paragraph>
			<newline />
			<section numberdepth="0">
				<title><anchor name="pagesize" font="Helvetica" size="11" style="bold">PageSize</anchor></title>
				<paragraph font="Helvetica" size="11" align="Justify">
					You could create your own <chunk font="Courier">Rectangle</chunk>-object in a certain
					color and use this as pageSize.<newline />
					In <anchor color="#008080" reference="#Chap0102">Example 2</anchor>, we create a long, narrow
					document with a yellowish backgroundcolor:<newline />
					<chunk font="Courier">Rectangle pageSize = new Rectangle(144, 720);</chunk><newline />
					<chunk font="Courier">pageSize.setBackgroundColor(new java.awt.Color(0xFF, 0xFF, 0xDE));</chunk><newline />
					<chunk font="Courier">Document document = new Document(pageSize);</chunk><newline />
					Normally, you don't have to worry about creating this rectangle, since you can use one of the statics in class
					<anchor reference="http://itext.sourceforge.net/src/com/lowagie/text/PageSize.java" font="Courier">PageSize.java</anchor>.
					These are the pagesizes that are provided: A0-A10, LEGAL, LETTER, HALFLETTER, _11x17, LEDGER, NOTE, B0-B5, ARCH_A-ARCH_E,
					FLSA and FLSE.<newline />
					Most of these pageSizes are in PORTRAIT-format. If you want them to be in <anchor name="landscape">LANDSCAPE</anchor>,
					all you have to do is <chunk font="Courier">rotate()</chunk> the <chunk font="Courier">Rectangle</chunk>:<newline />
					<chunk font="Courier">Document document = new Document(PageSize.A4.rotate()); </chunk><newline />
					This is demonstrated in <anchor color="#008080" reference="#Chap0103">Example 3</anchor>.
				</paragraph>
			</section>
			<section numberdepth="0">
				<title><anchor name="margins" font="Helvetica" size="12" style="bold">Margins</anchor></title>
				<paragraph font="Helvetica" size="11" align="Justify">
					When creating a document, you can also define left, right, upper and lower margins:<newline />
					<chunk font="Courier">Document document = new Document(PageSize.A5, 36, 72, 108, 180);</chunk><newline />
					In <anchor reference="Chap0104">Example 4</anchor>, you will see that this document has a left margin
					of 0.5 inch and a right margin of 1 inch. The upper margin is 1.5 inch, the lower 2.5 inch.
				</paragraph>
				<table width="85.0%" align="center" columns="1" cellpadding="3" cellspacing="3" grayfill="0.8">
					<row>
						<cell>
							<paragraph font="Helvetica" size="11"> 
								<anchor name="measurements" style="bold">measurements</anchor><newline />
								When creating a rectangle or choosing a margin, you might wonder what measurement unit
								is used: centimeters, inches or pixels. In fact, the default measurement system
								roughly corresponds to the various definitions of the typographic unit of
								measurement known as the <chunk style="italic">point</chunk>. There are 72 points in 1 inch.
								If you want to create a rectangle in PDF that has the size of an A4-page,
								you have to calculate the number of points:
							</paragraph>
							<list numbered="false" listsymbol="" symbolindent="20">
								<listitem font="Helvetica" size="11">
									21 cm / 2.54 = 8.2677 inch
								</listitem>
								<listitem font="Helvetica" size="11">
									8.2677 * 72 = 595 points
								</listitem>
								<listitem font="Helvetica" size="11">
									29.7 cm / 2.54 = 11.6929 inch
								</listitem>
								<listitem font="Helvetica" size="11">
									11.6929 * 72 = 842 points
								</listitem>
							</list>
							<paragraph font="Helvetica" size="11">
								The default border of 36 points corresponds with half an inch.
								The rectangle we created in Example 2 was 2 by 10 inches.
							</paragraph>
						</cell>
					</row>
				</table>
			</section>
		</section>
		<section>
			<title size="14" color="#008080">Source code of the examples</title>
			<section numberdepth="2">
				<title><anchor name="Chap0101">Example 1: Hello World</anchor></title>
				<paragraph size="9" align="Justify">
					Download the <anchor size="9" reference="http://www.lowagie.com/iText/examples/Chap0101.java" color="#008080">source code</anchor> and
					the <anchor size="9" reference="http://www.lowagie.com/iText/examples/Chap0101.pdf" color="#008080">resulting PDF</anchor>.
				</paragraph>
				<newline />
				<list numbered="false" listsymbol="" symbolindent="0">
					<listitem size="9" font="Courier" leading="12">
					import java.io.FileOutputStream;<newline />
					import java.io.IOException;<newline />
					<newline />
					import com.lowagie.text.*;<newline />
					import com.lowagie.text.pdf.PdfWriter;<newline />
					<newline />
					public class Chap0101 {<newline />
					</listitem>
					<list numbered="false" listsymbol="" symbolindent="20">
						<listitem size="9" font="Courier" leading="12">
						public static void main(String[] args) {<newline />
						</listitem>
						<list numbered="false" listsymbol="" symbolindent="20">
							<listitem size="9" font="Courier" leading="12">
							System.out.println("Chapter 1 example 1: Hello World");<newline />
							<newline />
							// step 1: creation of a document-object<newline />
							Document document = new Document();<newline />
							<newline />
							try {
							</listitem>
							<list numbered="false" listsymbol="" symbolindent="20">
								<listitem size="9" font="Courier" leading="12">
								// step 2:<newline />
								// we create a writer that listens to the document<newline />
								// and directs a PDF-stream to a file<newline />
								PdfWriter.getInstance(document, new FileOutputStream("Chap0101.pdf"));<newline />
								<newline />
								// step 3: we open the document<newline />
								document.open();<newline />
								<newline />
								// step 4: we add a paragraph to the document<newline />
								document.add(new Paragraph("Hello World")); <newline />
								</listitem>
							</list>
							<listitem size="9" font="Courier" leading="12">
							}<newline />
							catch(DocumentException de) {
							</listitem>
							<list numbered="false" listsymbol="" symbolindent="20">
								<listitem size="9" font="Courier" leading="12">
								System.err.println(de.getMessage());
								</listitem>
							</list>
							<listitem size="9" font="Courier" leading="12">
							}<newline />
							catch(IOException ioe) {<newline />
							</listitem>
							<list numbered="false" listsymbol="" symbolindent="20">
								<listitem size="9" font="Courier" leading="12">
								System.err.println(ioe.getMessage());
								</listitem>
							</list>
							<listitem size="9" font="Courier" leading="12">
							}<newline />
							<newline />
							// step 5: we close the document<newline />
							document.close();<newline />
							</listitem>
						</list>
					<listitem size="9" font="Courier" leading="12">
					}
					</listitem>
					</list>
				<listitem size="9" font="Courier" leading="12">
				}
				</listitem>
				</list>
			</section>
			<section numberdepth="2">
				<title><anchor name="Chap0102">Example 2: PageSize</anchor></title>
				<paragraph size="9" align="Justify">
					Download the <anchor size="9" reference="http://www.lowagie.com/iText/examples/Chap0102.java" color="#008080">source code</anchor> and
					the <anchor size="9" reference="http://www.lowagie.com/iText/examples/Chap0102.pdf" color="#008080">resulting PDF</anchor>.
				</paragraph>
				<newline />
				<list numbered="false" listsymbol="" symbolindent="0">
					<listitem size="9" font="Courier" leading="12">
					import java.io.FileOutputStream;<newline />
					import java.io.IOException;<newline />
					<newline />
					import com.lowagie.text.*;<newline />
					import com.lowagie.text.pdf.PdfWriter;<newline />
					<newline />
					public class Chap0102 {<newline />
					</listitem>
					<list numbered="false" listsymbol="" symbolindent="20">
						<listitem size="9" font="Courier" leading="12">
						public static void main(String[] args) {<newline />
						</listitem>
						<list numbered="false" listsymbol="" symbolindent="20">
							<listitem size="9" font="Courier" leading="12">
							System.out.println("Chapter 1 example 2: _Pagesize");<newline />
							<newline />
							// step 1: creation of a document-object<newline />
							Rectangle pageSize = new Rectangle(144, 720);<newline />
							pageSize.setBackgroundColor(new java.awt.Color(0xFF, 0xFF, 0xDE));<newline />
							Document document = new Document(pageSize);<newline />
							<newline />
							try {
							</listitem>
							<list numbered="false" listsymbol="" symbolindent="20">
								<listitem size="9" font="Courier" leading="12">
								// step 2:<newline />
								// we create a writer that listens to the document<newline />
								// and directs a PDF-stream to a file<newline />
								PdfWriter.getInstance(document, new FileOutputStream("Chap0102.pdf"));<newline />
								<newline />
								// step 3: we open the document<newline />
								document.open();<newline />
								<newline />
								// step 4: we add some paragraphs to the document<newline />
								for (int i = 0; i &lt; 5; i++) {<newline />
								</listitem>
								<list numbered="false" listsymbol="" symbolindent="20">
									<listitem size="9" font="Courier" leading="12">
									document.add(new Paragraph("Hello World"));
									</listitem>
								</list>
								<listitem size="9" font="Courier" leading="12">
								}
								</listitem>
							</list>
							<listitem size="9" font="Courier" leading="12">
							}<newline />
							catch(DocumentException de) {
							</listitem>
							<list numbered="false" listsymbol="" symbolindent="20">
								<listitem size="9" font="Courier" leading="12">
								System.err.println(de.getMessage());
								</listitem>
							</list>
							<listitem size="9" font="Courier" leading="12">
							}<newline />
							catch(IOException ioe) {<newline />
							</listitem>
							<list numbered="false" listsymbol="" symbolindent="20">
								<listitem size="9" font="Courier" leading="12">
								System.err.println(ioe.getMessage());
								</listitem>
							</list>
							<listitem size="9" font="Courier" leading="12">
							}<newline />
							<newline />
							// step 5: we close the document<newline />
							document.close();<newline />
							</listitem>
						</list>
					<listitem size="9" font="Courier" leading="12">
					}
					</listitem>
					</list>
				<listitem size="9" font="Courier" leading="12">
				}
				</listitem>
				</list>
			</section>
			<section numberdepth="2">
				<title><anchor name="Chap0103">Example 3: Pagesize</anchor></title>
				<paragraph size="9" align="Justify">
					Download the <anchor size="9" reference="http://www.lowagie.com/iText/examples/Chap0103.java" color="#008080">source code</anchor> and
					the <anchor size="9" reference="http://www.lowagie.com/iText/examples/Chap0103.pdf" color="#008080">resulting PDF</anchor>.
				</paragraph>
				<newline />
				<list numbered="false" listsymbol="" symbolindent="0">
					<listitem size="9" font="Courier" leading="12">
					import java.io.FileOutputStream;<newline />
					import java.io.IOException;<newline />
					<newline />
					import com.lowagie.text.*;<newline />
					import com.lowagie.text.pdf.PdfWriter;<newline />
					<newline />
					public class Chap0103 {<newline />
					</listitem>
					<list numbered="false" listsymbol="" symbolindent="20">
						<listitem size="9" font="Courier" leading="12">
						public static void main(String[] args) {<newline />
						</listitem>
						<list numbered="false" listsymbol="" symbolindent="20">
							<listitem size="9" font="Courier" leading="12">
							System.out.println("Chapter 1 example 3: Pagesize");<newline />
							<newline />
							// step 1: creation of a document-object<newline />
							Document document = new Document(PageSize.A4.rotate());<newline />
							<newline />
							try {
							</listitem>
							<list numbered="false" listsymbol="" symbolindent="20">
								<listitem size="9" font="Courier" leading="12">
								// step 2:<newline />
								// we create a writer that listens to the document<newline />
								// and directs a PDF-stream to a file<newline />
								PdfWriter.getInstance(document, new FileOutputStream("Chap0103.pdf"));<newline />
								<newline />
								// step 3: we open the document<newline />
								document.open();<newline />
								<newline />
								// step 4: we add some phrases to the document<newline />
								for (int i = 0; i &lt; 20; i++) {<newline />
								</listitem>
								<list numbered="false" listsymbol="" symbolindent="20">
									<listitem size="9" font="Courier" leading="12">
									document.add(new Phrase("Hello World, Hello Sun, Hello Moon, Hello Stars, Hello Sea, Hello Land, Hello People. "));
									</listitem>
								</list>
								<listitem size="9" font="Courier" leading="12">
								}
								</listitem>
							</list>
							<listitem size="9" font="Courier" leading="12">
							}<newline />
							catch(DocumentException de) {
							</listitem>
							<list numbered="false" listsymbol="" symbolindent="20">
								<listitem size="9" font="Courier" leading="12">
								System.err.println(de.getMessage());
								</listitem>
							</list>
							<listitem size="9" font="Courier" leading="12">
							}<newline />
							catch(IOException ioe) {<newline />
							</listitem>
							<list numbered="false" listsymbol="" symbolindent="20">
								<listitem size="9" font="Courier" leading="12">
								System.err.println(ioe.getMessage());
								</listitem>
							</list>
							<listitem size="9" font="Courier" leading="12">
							}<newline />
							<newline />
							// step 5: we close the document<newline />
							document.close();<newline />
							</listitem>
						</list>
					<listitem size="9" font="Courier" leading="12">
					}
					</listitem>
					</list>
				<listitem size="9" font="Courier" leading="12">
				}
				</listitem>
				</list>
			</section>
			<section numberdepth="2">
				<title><anchor name="Chap0103">Example 4: Margings</anchor></title>
				<paragraph size="9" align="Justify">
					Download the <anchor size="9" reference="http://www.lowagie.com/iText/examples/Chap0103.java" color="#008080">source code</anchor> and
					the <anchor size="9" reference="http://www.lowagie.com/iText/examples/Chap0103.pdf" color="#008080">resulting PDF</anchor>.
				</paragraph>
				<newline />
				<list numbered="false" listsymbol="" symbolindent="0">
					<listitem size="9" font="Courier" leading="12">
					import java.io.FileOutputStream;<newline />
					import java.io.IOException;<newline />
					<newline />
					import com.lowagie.text.*;<newline />
					import com.lowagie.text.pdf.PdfWriter;<newline />
					<newline />
					public class Chap0104 {<newline />
					</listitem>
					<list numbered="false" listsymbol="" symbolindent="20">
						<listitem size="9" font="Courier" leading="12">
						public static void main(String[] args) {<newline />
						</listitem>
						<list numbered="false" listsymbol="" symbolindent="20">
							<listitem size="9" font="Courier" leading="12">
							System.out.println("Chapter 1 example 4: Margins");<newline />
							<newline />
							// step 1: creation of a document-object<newline />
							Document document = new Document(PageSize.A5, 36, 72, 108, 180);<newline />
							<newline />
							try {
							</listitem>
							<list numbered="false" listsymbol="" symbolindent="20">
								<listitem size="9" font="Courier" leading="12">
								// step 2:<newline />
								// we create a writer that listens to the document<newline />
								// and directs a PDF-stream to a file<newline />
								PdfWriter.getInstance(document, new FileOutputStream("Chap0104.pdf"));<newline />
								<newline />
								// step 3: we open the document<newline />
								document.open();<newline />
								<newline />
								// step 4: we add a paragraph to the document<newline />
								Paragraph paragraph = new Paragraph();<newline />
								paragraph.setAlignment(Element.ALIGN_JUSTIFIED);<newline />
								for (int i = 0; i < 20; i++) {<newline />
								</listitem>
								<list numbered="false" listsymbol="" symbolindent="20">
									<listitem size="9" font="Courier" leading="12">
									paragraph.add("Hello World, Hello Sun, Hello Moon, Hello Stars, Hello Sea, Hello Land, Hello People. ");																																																																																														   									</listitem>
								</list>
								<listitem size="9" font="Courier" leading="12">
								}
								</listitem>
							</list>
							<listitem size="9" font="Courier" leading="12">
							}<newline />
							catch(DocumentException de) {
							</listitem>
							<list numbered="false" listsymbol="" symbolindent="20">
								<listitem size="9" font="Courier" leading="12">
								System.err.println(de.getMessage());
								</listitem>
							</list>
							<listitem size="9" font="Courier" leading="12">
							}<newline />
							catch(IOException ioe) {<newline />
							</listitem>
							<list numbered="false" listsymbol="" symbolindent="20">
								<listitem size="9" font="Courier" leading="12">
								System.err.println(ioe.getMessage());
								</listitem>
							</list>
							<listitem size="9" font="Courier" leading="12">
							}<newline />
							<newline />
							// step 5: we close the document<newline />
							document.close();<newline />
							</listitem>
						</list>
					<listitem size="9" font="Courier" leading="12">
					}
					</listitem>
					</list>
				<listitem size="9" font="Courier" leading="12">
				}
				</listitem>
				</list>
			</section>
		</section>
	</chapter>
</itext>
