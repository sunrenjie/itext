<?xml version="1.0" encoding="UTF-8" ?> 
<!-- $Header$ -->
<site:page
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:site="http://www.lowagie.com/iText/site" >
	<site:metadata>
		<site:title>iText Toolbox</site:title>
		<site:summary>A Java Web Start application that allows you to do lots of cool stuff with PDF</site:summary>
		<site:keywords>PDF, JAVA, iText, Toolbox, Lowagie, Bruno</site:keywords>
		<site:updated>$Date$</site:updated>
	</site:metadata>
	<site:content>
	<div>
<div class="header">iText Toolbox</div>
<div class="title">Opening the Toolbox</div>
<div class="small">The iText toolbox can be started in two different ways.
You can <a href="download.html">download</a> the iText.jar. This is an executable jar.
You can execute it with:
<pre class="commandline">
java -jar iText.jar
</pre>
Or you can install it as a Java Web Start (JWS) application, just by clicking this
<a href="http://1t3xt.com/jnlp/toolbox.jnlp">JNLP</a>-file.<br />
All tools can also be called from the commandline with the same arguments in the same order as documented below.
Or you can call the tools from your own Java applications.
</div>

<div class="title">Convert2Pdf</div>
<div class="small">This set of tools allows you to produce PDF files from different sources:
<ul>
<li><b>KnitTiff:</b> Suppose you have scanned a book and the end result is two TIFF files.
One with the even pages, another one with the odd pages. KnitTif will knit these two TIFF files together
into one PDF that has all the pages in the right order.
<ul>arguments
<li><b>odd:</b> the TIFF file with the odd pages</li>
<li><b>even:</b> the TIFF file with the even pages</li>
<li><b>destfile:</b> the path to the PDF that should be generated</li>
</ul>
</li>
<li><b>PhotoAlbum:</b> Build a PhotoAlbum in PDF, containing all the images from a certain directory.
The thumbnail pane of the PDF is opened, so that you can see thumbnails of all the images.
The thumbnails have the filename of the image as page label.
<ul>arguments
<li><b>srcdir:</b> the path to the directory that contains all the images</li>
<li><b>destfile:</b> the path to the PDF that should be generated</li>
</ul>
</li>
<li><b>Tiff2Pdf:</b> Converts a (multipage) TIFF file to PDF.
<ul>arguments
<li><b>srcfile:</b> the original TIFF file</li>
<li><b>destfile:</b> the path to the PDF that should be generated</li>
<li><b>pagesize:</b> (optional) can be A4 (default), LETTER or ORIGINAL.
When ORIGINAL is chosen, the pages have the same size as the pages of the TIFF.</li>
</ul>
</li>
<li><b>Txt2Pdf:</b> Converts a plain ASCII txt file to PDF. The font that will
be used is Courier 11pt for documents in PORTRAIT, Courier 10pt for documents in LANDSCAPE.
<ul>arguments
<li><b>srcfile:</b> the original file</li>
<li><b>destfile:</b> the path to the PDF that should be generated</li>
<li><b>pagesize:</b> a very complete list of page sizes is presented.</li>
<li><b>orientation:</b> (optional) PORTRAIT (default) or LANDSCAPE</li>
</ul>
</li>
</ul>
</div>

<div class="title">Encrypt</div>
<div class="small">This set of tools allows you to encrypt/decrypt PDF files:
<ul>
<li><b>Encrypt:</b> encrypts a PDF
<ul>arguments
<li><b>srcfile:</b> the unencrypted PDF file you want to encrypt</li>
<li><b>destfile:</b> the path to the encrypted PDF that should be generated</li>
<li><b>ownerpassword:</b> (optional) password to be entered when you want to change the permissions or decrypt the PDF afterwards</li>
<li><b>userpassword:</b> (optional) password to be entered by the user if he wants to see the PDF</li>
<li><b>permissions:</b> (optional) check the permissions that should be present in the PDF file.
If you are using this tool from the commandline, it's a String with a series of '0' and '1' values.</li>
<li><b>strength:</b> (optional) you can choose 40 bit or 128 bit encoding</li>
</ul>
</li>
</ul>
</div>

<div class="title">Manipulate</div>
<div class="small">This set of tools allows you to manipulate existing PDF files:
<ul>
<li><b>Burst:</b> Splits a PDF into single pages. One page per new PDF file, the files have the same name as the original file, but an underscore and page number are added.
<ul>arguments
<li><b>srcfile:</b> the path to the PDF that should be split into single pages.</li>
</ul>
</li>
<li><b>Concat:</b> Concatenates 2 PDF files into 1.
<ul>arguments
<li><b>srcfile1:</b> the path to the first PDF</li>
<li><b>srcfile2:</b> the path to the second PDF</li>
<li><b>destfile:</b> the path to the PDF that should be generated</li>
</ul>
</li>
<li><b>N-up:</b> Generates a new PDF based on an existing one and put N pages of
the existing PDF on 1 page of the new PDF.
<ul>arguments
<li><b>srcfile:</b> the path to the source PDF</li>
<li><b>destfile:</b> the path to the resulting PDF</li>
<li><b>pow2:</b> N = Math.pow(2, pow2); so pow2 = 1 if you want 2 pages on 1, pow2 = 2 if you want 4 pages on 1, pow2 = 3 if you want 8 pages on 1, etc...</li>
</ul>
</li>
<li><b>SelectedPages:</b> Allows you to copy a selection of pages from an existing PDF into a new PDF file.
<ul>arguments
<li><b>srcfile:</b> the path to the original PDF</li>
<li><b>destfile:</b> the path to the PDF that should be generated</li>
<li><b>selection:</b> a range of pages; the general syntax is:
<span class="commandline">[!][o][odd][e][even]start-end</span><br />
You can have multiple ranges separated by commas ','.<br />
The '!' modifier removes the range from what is already selected.<br />
The range changes are incremental, that is, numbers are added or deleted as the range appears.<br />
The start or the end, but not both, can be ommited.</li>
</ul>
</li>
<li><b>Split:</b> Splits a PDF file into two separate PDF files.
<ul>arguments
<li><b>srcfile:</b> the original PDF file</li>
<li><b>destfile1:</b> the path to the first PDF that should be generated (pages 1 to pagenumber - 1)</li>
<li><b>destfile1:</b> the path to the second PDF that should be generated (the rest of the pages)</li>
<li><b>pagenumber:</b> the number of the page where you want to split.</li>
</ul>
</li>
<li><b>Watermarker:</b> Adds a text watermark to an existing PDF.
<ul>arguments
<li><b>srcfile:</b> the original file</li>
<li><b>watermark:</b> the text that will be used as watermark</li>
<li><b>fontsize:</b> the font size of the text watermark</li>
<li><b>destfile:</b> the path to the PDF that should be generated</li>
</ul>
</li>
</ul>
</div>

<div class="title">Properties</div>
<div class="small">This set of tools allows you to inspect PDF files:
<ul>
<li><b>HtmlBookmarks:</b> makes an HTML file containing the bookmarks of your PDF.
For instance, if you have the file <a href="http://itextdocs.lowagie.com/tutorial/objects/bookmarks/ChapterSection.pdf">ChapterSection.pdf</a> from the tutorial,
you can make a <a href="http://itextdocs.lowagie.com/tutorial/objects/bookmarks/ChapterSection_index.html">ChapterSection_index.html</a> that holds contains the index for the
PDF and links to the specific pages. The same goes for <a href="http://itextdocs.lowagie.com/tutorial/objects/bookmarks/OutlineActions.pdf">OutlineActions.pdf</a> and
<a href="http://itextdocs.lowagie.com/tutorial/objects/bookmarks/OutlineActions_index.html">OutlineActions_index.html</a> (where the bookmarks can be links to a remote document or URL too).
<ul>arguments
<li><b>srcfile:</b> the PDF file you want to inspect</li>
<li><b>ownerpassword:</b> (optional) if the file is encrypted, you have to enter the ownerpassword</li>
</ul>
</li>
<li><b>InspectPDF:</b> generates a list with properties of the PDF, such as number of pages, number of PDF objects, metadata,...
<ul>arguments
<li><b>srcfile:</b> the PDF file you want to inspect</li>
<li><b>ownerpassword:</b> (optional) if the file is encrypted, you have to enter the ownerpassword</li>
</ul>
</li>
</ul>
</div>

<div class="title">Various</div>
<div class="small">These are some handy tools that can be used for different purposes:
<ul>
<li><b>DvdCover:</b> Makes you a nice DVD cover for your home movies.
<ul>arguments
<li><b>destfile:</b> the path to the PDF that should be generated</li>
<li><b>title:</b> the title of the DVD</li>
<li><b>backgroundcolor:</b> the backgroundcolor of the DVD Cover (for instance 0xFFFFFF)</li>
<li><b>front:</b> (optional) the front image of the DVD Cover</li>
<li><b>back:</b> (optional) the back image of the DVD Cover</li>
<li><b>side:</b> (optional) the side image of the DVD Cover</li>
</ul>
</li>
<li><b>ExtractAttachments:</b> Extracts all the files that are added to the PDF as an attachment.
<ul>arguments
<li><b>srcfile:</b> the path to the PDF with the attachments.</li></ul>
</li>
<li><b>Handouts:</b> Generates handouts with room for notes, based on an existing PDF file.
<ul>arguments
<li><b>srcdir:</b> the path to the directory that contains all the images</li>
<li><b>destfile:</b> the path to the PDF that should be generated</li>
<li><b>pages:</b> you can choose the number of original pages that should come on one page</li>
</ul>
</li>
<li><b>LPRClient:</b> Allows to print pdf files directly to network reachable postscript printers that support rfc1179 lpr protocoll (port 515).<br />
The source code was derived from <a href="http://www.hemasoft.de/dev/lprj/">http://www.hemasoft.de/dev/lprj/</a><br />
It seems that most of the printers supporting postscript language level 3 are able to process
pdf directly but I am not sure about this (Another thing that can break pdf support is
the amount of ram in the printer).
<ul>arguments
<li><b>srcfile:</b> the path to the PDF you want to print;
if you do not choose a input file it uses a built-in postscript file
and sends it to the printer that makes the printer print some internal settings,
the postscript engine version and the postscript language level.</li>
<li><b>hostname</b> (or ip-adress)</li>
<li><b>queuename:</b> try "raw" or "raw1","raw2" on HP Jetdirect print servers,
some other manufacters need "print" or something else</li>
<li><b>copies:</b> 1-n, just the number of copies you want to print</li></ul>
</li>
</ul>
</div>
	</div>
	</site:content>
</site:page>